SDWLAPI1 ;RGI/CBR - WAIT LIST API; 3/29/13
 ;;5.3;scheduling;**260003**;08/13/93
LOCK(RETURN,IEN) ;LOCK ^SDWL GLOBAL
 S RETURN=0
 I '+$G(IEN) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","IEN")
 S RETURN=$$LOCK^SDWLDAL(IEN)
 Q:RETURN 1
 D ERRX^SDAPIE(.RETURN,"FILELOCK")
 Q 0
 ;
UNLOCK(IEN) ;
 Q:'+$G(IEN) 0
 Q $$UNLOCK^SDWLDAL(IEN)
 ;
HASENTRY(RETURN,DFN) ;PATIENT HAS EWL ENTRIES?
 K RETURN
 S RETURN=0
 I '$$PATIEN^SDCHK(.RETURN,.DFN) Q 0
 S RETURN=$$HASENTRY^SDWLDAL(DFN)
 Q 1
 ;
LIST(RETURN,DFN,STATUS,BEGIN,END) ;LIST PATIENT EWL ENTRIES
 N PATOK
 S RETURN=0
 I '$$PATIEN^SDCHK(.RETURN,.DFN) Q 0
 S STATUS=$E($G(STATUS))
 I STATUS'="",STATUS'="O",STATUS'="I" D ERRX^SDAPIE(.RETURN,"INVPARAM","STATUS") Q 0
 I '$$DTIME^SDCHK(.RETURN,.BEGIN,"BEGIN",1) Q 0
 I '$$DTIME^SDCHK(.RETURN,.END,"END",1) Q 0
 S BEGIN=$G(BEGIN)
 S END=$G(END)
 D LIST^SDWLDAL(.RETURN,DFN,STATUS,BEGIN,END)
 Q 1
 ;
DETAIL(RETURN,IEN) ;
 K RETURN
 S RETURN=0
 I '$$SDWLIEN^SDCHK(.RETURN,.IEN,"IEN") Q 0
 D DETAIL^SDWLDAL(.RETURN,IEN)
 Q 1
 ;
TRNDET(RETURN,SDWLIEN) ; Get transfer details for Electronic Wait List internal entry number
 ; Input:   SDWLIEN:   EWL IEN
 ; Output:  RETURN("ACTIVE"): 0: no active transfer, 1: active transfer
 ;          RETURN("INSTITUTION"): Institution name
 ;          RETURN("STATION"):  Station Number
 N HASENTRY
 S RETURN("ACTIVE")=0
 I '+$G(SDWLIEN) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","SDWLIEN")
 I '$$TRFRQACT^SDWLDAL(SDWLIEN) Q 1
 S RETURN("ACTIVE")=1
 Q $$TRFRQDET^SDWLDAL(.RETURN,SDWLIEN)
 Q 1
 ;
DISP(RETURN,SDWLIEN,SDWLDISP,SDWLAPPT) ;UPDATE DISPOSITION
 N DA,DIE,SDWLDUZ
 S RETURN=0
 I '$$SDWLIEN^SDCHK(.RETURN,.SDWLIEN,"SDWLIEN") Q 0
 I $G(SDWLDISP)=""!("^D^NC^SA^CC^NN^ER^TR^CL^"'[("^"_$G(SDWLDISP)_"^")) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","SDWLDISP")
 S RETURN=$$DISP^SDWLDAL(SDWLIEN,SDWLDISP,.SDWLAPPT)
 ;; OG ; SD*5.3*446 Inter-facility transfer.
 I SDWLDISP'="SA" D DIS^SDWLE6(SDWLIEN)
 Q RETURN
 ;
NEW(RETURN,SDWLD) ;CREATE NEW EWL ENTRY
 ;RETURN: RETURNS NEW ENTRY IEN
 N PAT,TYP
 K RETURN
 S RETURN=0
 I '$D(SDWLD) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","SDWLD")
 I +$G(SDWLD("PATIENT"))'>0 D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","PATIENT")
 I '$$PATDET^SDWLEXT(.PAT,+SDWLD("PATIENT")) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"PATNFND")
 I +$G(SDWLD("INSTITUTION"))'>0 D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","INSTITUTION")
 S TYP=+$G(SDWLD("WLTYPE"))
 I TYP'>0,TYP'<5  D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","WLTYPE")
 I (TYP=3)!(TYP=4),'$D(SDWLD("PRIORITY")) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","PRIORITY")
 I (TYP=3)!(TYP=4),'$D(SDWLD("REQBY")) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","REQBY")
 I (TYP=3)!(TYP=4),'$D(SDWLD("DSRDDT")) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","DSRDDT")
 Q $$NEW^SDWLDAL(.RETURN,.SDWLD)
 ;
UPDATE(RETURN,SDWLIEN,SDWLD) ;
 K RETURN
 S RETURN=0
 I +$G(SDWLIEN)'>0 D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","SDWLIEN")
 I '+$D(SDWLD) D  Q 0
 . D ERRX^SDAPIE(.RETURN,"INVPARAM","SDWLD")
 Q $$UPDATE^SDWLDAL(.RETURN,SDWLIEN,.SDWLD)
 ;
DELETE(RETURN,SDWLIEN) ;DELETE EWL ENTRY
 K RETURN
 S RETURN=0
 I '$$SDWLIEN^SDCHK(.RETURN,.SDWLIEN,"SDWLIEN") Q 0
 Q $$DELETE^SDWLDAL(.RETURN,SDWLIEN)
 ;
